{"version":3,"sources":["components/ParagraphCountry.js","components/Weather.js","components/Country.js","components/Display.js","App.js","index.js"],"names":["ParagraphCountry","props","country","name","id","index","onClick","handleClick","Weather","weather","undefined","current","temperature","src","weather_icons","width","alt","wind_speed","wind_dir","ParagraphLanguage","language","Country","useState","setWeather","useEffect","axios","get","process","capital","then","response","data","sucess","languages","map","key","population","flag","Display","countries","length","list","show","indexShow","App","setCountries","searchFor","setSearchFor","setShow","setindexShow","countriesToDisplay","filter","toLowerCase","indexOf","onChange","event","target","value","ReactDOM","render","document","getElementById"],"mappings":"8MAMeA,EAJU,SAACC,GACtB,OAAO,oCAAGA,EAAMC,QAAQC,KAAK,4BAAQC,GAAIH,EAAMI,MAAOC,QAASL,EAAMM,aAAxC,QAAkE,+BCapFC,EAdC,SAAC,GAAc,IAAbC,EAAY,EAAZA,QAEd,YAAuBC,IAApBD,EAAQE,QACA,gEAGP,6BACI,2CADJ,IACyBF,EAAQE,QAAQC,YADzC,WAC6D,6BACzD,yBAAKC,IAAKJ,EAAQE,QAAQG,cAAc,GAAIC,MAAM,MAAMC,IAAI,SAAQ,6BACpE,oCAHJ,IAGkBP,EAAQE,QAAQM,WAHlC,kBAG6DR,EAAQE,QAAQO,WCP/EC,EAAoB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAC1B,OAAO,4BAAKA,EAASjB,OAqCRkB,EAlCC,SAAC,GAAc,IAAbnB,EAAY,EAAZA,QAAY,EAGEoB,mBAAS,IAHX,mBAGpBb,EAHoB,KAGZc,EAHY,KAc1BC,qBATa,WACTC,IAAMC,IAAN,0DAJoBC,mCAIpB,kBAAsFzB,EAAQ0B,UACzFC,MAAK,SAAAC,IAC0B,IAAzBA,EAASC,KAAKC,QACbT,EAAWO,EAASC,WAKrB,IAEf,IAAME,EAAY/B,EAAQ+B,UAAUC,KAAI,SAACd,EAASf,GAC9C,OAAO,kBAAC,EAAD,CAAmB8B,IAAK9B,EAAOe,SAAUA,OAGpD,OACI,6BACA,4BAAKlB,EAAQC,MADb,WAESD,EAAQ0B,QAAQ,6BAFzB,cAGY1B,EAAQkC,WAAW,6BAC/B,yCACA,4BAAKH,GACL,yBAAKpB,IAAKX,EAAQmC,KAAMtB,MAAM,MAAMC,IAAI,SACxC,0CAAgBd,EAAQ0B,SACxB,kBAAC,EAAD,CAASnB,QAASA,MCjBX6B,EAhBC,SAACrC,GACb,GAAGA,EAAMsC,UAAUC,OAAO,GACxB,OAAO,iFACH,GAAGvC,EAAMsC,UAAUC,OAAO,EAAE,CAChC,IAAMC,EAAOxC,EAAMyC,KACN,kBAAC,EAAD,CAASxC,QAASD,EAAMsC,UAAUtC,EAAM0C,aACxC1C,EAAMsC,UAAUL,KAAI,SAAChC,EAAQG,GAC1B,OAAO,kBAAC,EAAD,CAAkB8B,IAAK9B,EAAOA,MAAOA,EAAOH,QAASA,EAASK,YAAaN,EAAMM,iBAExG,OAAO,6BAAMkC,GACT,OAA8B,IAA3BxC,EAAMsC,UAAUC,OAChB,kBAAC,EAAD,CAAStC,QAASD,EAAMsC,UAAU,KAEpC,+BCuBIK,EApCH,WAAO,IAAD,EACgBtB,mBAAS,IADzB,mBACViB,EADU,KACAM,EADA,OAEgBvB,mBAAS,IAFzB,mBAEVwB,EAFU,KAEAC,EAFA,OAGKzB,oBAAS,GAHd,mBAGVoB,EAHU,KAGLM,EAHK,OAIgB1B,mBAAS,GAJzB,mBAIVqB,EAJU,KAIAM,EAJA,KAahBzB,qBAPa,WACXC,IAAMC,IAAI,wCACLG,MAAK,SAAAC,GACJe,EAAaf,EAASC,WAIf,IAEf,IAUMmB,EAAqBX,EAAUY,QAAO,SAACjD,GAAD,OAAaA,EAAQC,KAAKiD,cAAcC,QAAQP,IAAY,KAExG,OACE,+CACiB,2BAAOQ,SAdN,SAACC,GACnBR,EAAaQ,EAAMC,OAAOC,MAAML,eAChCJ,GAAQ,MAYwC,6BAC9C,kBAAC,EAAD,CAAST,UAAWW,EAAoBP,UAAWA,EAC/CpC,YAAa,SAACgD,GAAD,OAXD,SAACA,GACnBN,EAAaM,EAAMC,OAAOpD,IAC1B4C,GAASN,GASqBnC,CAAYgD,IAAQb,KAAMA,MC9B5DgB,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.02782791.chunk.js","sourcesContent":["import React from 'react'\n\nconst ParagraphCountry = (props) => {\n    return <>{props.country.name}<button id={props.index} onClick={props.handleClick}>show</button><br/></>\n}\n\nexport default ParagraphCountry","import React from 'react'\n\nconst Weather = ({weather}) =>{\n    \n    if(weather.current === undefined){\n        return <div>Fetching weather, please wait..</div>\n    }\n    return(\n        <div>\n            <b>temperature:</b> {weather.current.temperature} Celsius<br/>\n            <img src={weather.current.weather_icons[0]} width=\"100\" alt=\"flag\"/><br/>\n            <b>wind:</b> {weather.current.wind_speed} mph direction {weather.current.wind_dir}\n        </div>\n    )\n}\n\nexport default Weather","import React,{useState,useEffect} from 'react'\nimport Weather from './Weather'\nimport axios from 'axios'\n\nconst ParagraphLanguage = ({language}) => {\n  return <li>{language.name}</li>\n}\n\nconst Country = ({country}) =>{\n    \n    const api_key_weather = process.env.REACT_APP_API_KEY\n    const[weather,setWeather] = useState([])\n\n    const hook = () => {\n        axios.get(`https://api.weatherstack.com/current?access_key=${api_key_weather}&query=${country.capital}`)\n            .then(response => {\n                if(response.data.sucess !== false){\n                    setWeather(response.data)\n                }\n            })\n    }\n    \n    useEffect(hook,[])  \n\n    const languages = country.languages.map((language,index)=>{\n        return <ParagraphLanguage key={index} language={language}/>\n    })\n\n    return(\n        <div>\n        <h2>{country.name}</h2>\n        capital {country.capital}<br/>  \n        population {country.population}<br/>\n        <h3>Languages</h3>\n        <ul>{languages}</ul>\n        <img src={country.flag} width=\"200\" alt=\"flag\"/>\n        <h3>Weather in {country.capital}</h3>\n        <Weather weather={weather}/>\n        </div>\n    )\n}\n\nexport default Country","import React from 'react'\nimport ParagraphCountry from './ParagraphCountry'\nimport Country from './Country'\n\nconst Display = (props) => {\n    if(props.countries.length>10){\n      return <>Too many matches, specify another filter </>\n    }else if(props.countries.length>1){\n      const list = props.show?\n                   <Country country={props.countries[props.indexShow]} />:\n                   props.countries.map((country,index) => {\n                      return <ParagraphCountry key={index} index={index} country={country} handleClick={props.handleClick}/>\n                   })\n      return <div>{list}</div>\n    }else if(props.countries.length === 1){\n      return <Country country={props.countries[0]} />\n    }\n    return <div></div>\n}\n\nexport default Display","import React,{useState, useEffect} from 'react';\nimport axios from 'axios'\nimport Display from './components/Display'\n\nconst App = () => {\n  const[countries,setCountries] = useState([])\n  const[searchFor,setSearchFor] = useState(\"\") \n  const[show,setShow]= useState(false)\n  const[indexShow,setindexShow] = useState(0)\n\n  const hook = () => {\n    axios.get('https://restcountries.eu/rest/v2/all')\n        .then(response => {\n          setCountries(response.data)\n        })\n  }\n\n  useEffect(hook,[])\n\n  const handleInput = (event) => {\n    setSearchFor(event.target.value.toLowerCase())\n    setShow(false)  \n  }\n\n  const handleClick = (event) => {\n    setindexShow(event.target.id)\n    setShow(!show)\n  }\n\n  const countriesToDisplay = countries.filter((country) => country.name.toLowerCase().indexOf(searchFor)>-1)\n\n  return(\n    <div>\n      find countries <input onChange={handleInput}/><br/>\n      <Display countries={countriesToDisplay} indexShow={indexShow} \n          handleClick={(event) => handleClick(event)} show={show} />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}